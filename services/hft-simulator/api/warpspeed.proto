syntax = "proto3";

package warpspeed;

// Side enum represents buy/sell orders
enum Side {
    BUY = 0;
    SELL = 1;
}

// Core order message
message Order {
    string order_id = 1;
    string instrument = 2;
    double price = 3;
    int64 quantity = 4;
    Side side = 5;
}

// Request message for submitting orders
message OrderRequest {
    Order order = 1;
}

// Response message for order submissions
message OrderResponse {
    string status = 1;
    string order_id = 2;
}

// Request message for canceling orders
message CancelRequest {
    string order_id = 1;
}

// Response message for order cancellations
message CancelResponse {
    string status = 1;
}

// Request message for market data subscription
message MarketDataRequest {
    string instrument = 1;
}

// Trade information
message Trade {
    double price = 1;
    int64 quantity = 2;
}

// Quote information
message Quote {
    double bid_price = 1;
    double ask_price = 2;
    int64 bid_quantity = 3;
    int64 ask_quantity = 4;
}

// Market data message containing either trade or quote
message MarketData {
    string instrument = 1;
    int64 timestamp = 2;
    oneof data {
        Trade trade = 3;
        Quote quote = 4;
    }
}

// HFT Service definition
service HFTService {
    rpc SubmitOrder(OrderRequest) returns (OrderResponse) {}
    // ADD THE MISSING RPC DEFINITION
    rpc CancelOrder(CancelRequest) returns (CancelResponse) {}
    rpc StreamMarketData(MarketDataRequest) returns (stream MarketData) {}
}